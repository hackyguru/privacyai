import { DEFAULT_NUM_SHARDS } from "@waku/interfaces";
import { contentTopicToShardIndex } from "@waku/utils";
export const decoderParamsToShardInfo = (params, networkConfig) => {
    const clusterId = (params.shardInfo?.clusterId ||
        networkConfig.clusterId);
    const shardsUnderCluster = params.shardInfo && "shardsUnderCluster" in params.shardInfo
        ? params.shardInfo.shardsUnderCluster
        : DEFAULT_NUM_SHARDS;
    const shardIndex = params.shardInfo && "shard" in params.shardInfo
        ? params.shardInfo.shard
        : contentTopicToShardIndex(params.contentTopic, shardsUnderCluster);
    return {
        clusterId,
        shard: shardIndex
    };
};
export const isShardCompatible = (shardInfo, networkConfig) => {
    if (networkConfig.clusterId !== shardInfo.clusterId) {
        return false;
    }
    if ("shards" in networkConfig &&
        !networkConfig.shards.includes(shardInfo.shard)) {
        return false;
    }
    return true;
};
//# sourceMappingURL=utils.js.map