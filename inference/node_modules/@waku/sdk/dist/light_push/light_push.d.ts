import { type IEncoder, ILightPush, type IMessage, type ISendOptions, type Libp2p, type LightPushProtocolOptions, SDKProtocolResult } from "@waku/interfaces";
import { PeerManager } from "../peer_manager/index.js";
type LightPushConstructorParams = {
    peerManager: PeerManager;
    libp2p: Libp2p;
    options?: Partial<LightPushProtocolOptions>;
};
export declare class LightPush implements ILightPush {
    private readonly config;
    private readonly retryManager;
    private readonly peerManager;
    private readonly protocol;
    constructor(params: LightPushConstructorParams);
    get multicodec(): string;
    start(): void;
    stop(): void;
    send(encoder: IEncoder, message: IMessage, options?: ISendOptions): Promise<SDKProtocolResult>;
}
export {};
