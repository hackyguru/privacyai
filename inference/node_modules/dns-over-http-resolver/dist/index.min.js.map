{
  "version": 3,
  "sources": ["../src/index.ts", "../node_modules/quick-lru/index.js", "../node_modules/weald/node_modules/ms/dist/index.mjs", "../node_modules/weald/src/common.ts", "../node_modules/weald/src/browser.ts", "../node_modules/weald/src/index.ts", "../src/utils.ts"],
  "sourcesContent": ["import QuickLRU from 'quick-lru'\nimport debug from 'weald'\nimport * as utils from './utils.js'\nimport type { DNSJSON } from './utils'\n\nconst log = Object.assign(debug('dns-over-http-resolver'), {\n  error: debug('dns-over-http-resolver:error')\n})\n\nexport interface Request { (resource: string, signal: AbortSignal): Promise<DNSJSON> }\n\ninterface ResolverOptions {\n  maxCache?: number\n  request?: Request\n}\n\n/**\n * DNS over HTTP resolver.\n * Uses a list of servers to resolve DNS records with HTTP requests.\n */\nclass Resolver {\n  private readonly _cache: QuickLRU<string, string[]>\n  private readonly _TXTcache: QuickLRU<string, string[][]>\n  private _servers: string[]\n  private readonly _request: Request\n  private _abortControllers: AbortController[]\n\n  /**\n   * @class\n   * @param {object} [options]\n   * @param {number} [options.maxCache = 100] - maximum number of cached dns records\n   * @param {Request} [options.request] - function to return DNSJSON\n   */\n  constructor (options: ResolverOptions = {}) {\n    this._cache = new QuickLRU({ maxSize: options?.maxCache ?? 100 })\n    this._TXTcache = new QuickLRU({ maxSize: options?.maxCache ?? 100 })\n    this._servers = [\n      'https://cloudflare-dns.com/dns-query',\n      'https://dns.google/resolve'\n    ]\n    this._request = options.request ?? utils.request\n    this._abortControllers = []\n  }\n\n  /**\n   * Cancel all outstanding DNS queries made by this resolver. Any outstanding\n   * requests will be aborted and promises rejected.\n   */\n  cancel (): void {\n    this._abortControllers.forEach(controller => { controller.abort() })\n  }\n\n  /**\n   * Get an array of the IP addresses currently configured for DNS resolution.\n   * These addresses are formatted according to RFC 5952. It can include a custom port.\n   */\n  getServers (): string[] {\n    return this._servers\n  }\n\n  /**\n   * Get a shuffled array of the IP addresses currently configured for DNS resolution.\n   * These addresses are formatted according to RFC 5952. It can include a custom port.\n   */\n  _getShuffledServers (): string[] {\n    const newServers = [...this._servers]\n\n    for (let i = newServers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newServers[i]\n      newServers[i] = newServers[j]\n      newServers[j] = temp\n    }\n\n    return newServers\n  }\n\n  /**\n   * Sets the IP address and port of servers to be used when performing DNS resolution.\n   *\n   * @param {string[]} servers - array of RFC 5952 formatted addresses.\n   */\n  setServers (servers: string[]): void {\n    this._servers = servers\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into the appropriate DNS record\n   *\n   * @param {string} hostname - host name to resolve\n   * @param {string} [rrType = 'A'] - resource record type\n   */\n  async resolve (hostname: string, rrType: 'TXT'): Promise<string[][]>\n  async resolve (hostname: string, rrType: 'A' | 'AAAA'): Promise<string[]>\n  async resolve (hostname: string): Promise<string[]>\n  async resolve (hostname: string, rrType: string = 'A'): Promise<string[] | string[][]> {\n    switch (rrType) {\n      case 'A':\n        return this.resolve4(hostname)\n      case 'AAAA':\n        return this.resolve6(hostname)\n      case 'TXT':\n        return this.resolveTxt(hostname)\n      default:\n        throw new Error(`${rrType} is not supported`)\n    }\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into IPv4 addresses\n   *\n   * @param {string} hostname - host name to resolve\n   */\n  async resolve4 (hostname: string): Promise<string[]> {\n    const recordType = 'A'\n    const cached = this._cache.get(utils.getCacheKey(hostname, recordType))\n    if (cached != null) {\n      return cached\n    }\n    let aborted = false\n\n    for (const server of this._getShuffledServers()) {\n      const controller = new AbortController()\n      this._abortControllers.push(controller)\n\n      try {\n        const response = await this._request(utils.buildResource(\n          server,\n          hostname,\n          recordType\n        ), controller.signal)\n\n        const data = response.Answer.map(a => a.data)\n        const ttl = Math.min(...response.Answer.map(a => a.TTL))\n\n        this._cache.set(utils.getCacheKey(hostname, recordType), data, { maxAge: ttl })\n\n        return data\n      } catch (err) {\n        if (controller.signal.aborted) {\n          aborted = true\n        }\n\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      } finally {\n        this._abortControllers = this._abortControllers.filter(c => c !== controller)\n      }\n    }\n\n    if (aborted) {\n      throw Object.assign(new Error('queryA ECANCELLED'), {\n        code: 'ECANCELLED'\n      })\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into IPv6 addresses\n   *\n   * @param {string} hostname - host name to resolve\n   */\n  async resolve6 (hostname: string): Promise<string[]> {\n    const recordType = 'AAAA'\n    const cached = this._cache.get(utils.getCacheKey(hostname, recordType))\n    if (cached != null) {\n      return cached\n    }\n    let aborted = false\n\n    for (const server of this._getShuffledServers()) {\n      const controller = new AbortController()\n      this._abortControllers.push(controller)\n\n      try {\n        const response = await this._request(utils.buildResource(\n          server,\n          hostname,\n          recordType\n        ), controller.signal)\n\n        const data = response.Answer.map(a => a.data)\n        const ttl = Math.min(...response.Answer.map(a => a.TTL))\n\n        this._cache.set(utils.getCacheKey(hostname, recordType), data, { maxAge: ttl })\n\n        return data\n      } catch (err) {\n        if (controller.signal.aborted) {\n          aborted = true\n        }\n\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      } finally {\n        this._abortControllers = this._abortControllers.filter(c => c !== controller)\n      }\n    }\n\n    if (aborted) {\n      throw Object.assign(new Error('queryAaaa ECANCELLED'), {\n        code: 'ECANCELLED'\n      })\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into a Text record\n   *\n   * @param {string} hostname - host name to resolve\n   */\n  async resolveTxt (hostname: string): Promise<string[][]> {\n    const recordType = 'TXT'\n    const cached = this._TXTcache.get(utils.getCacheKey(hostname, recordType))\n    if (cached != null) {\n      return cached\n    }\n    let aborted = false\n\n    for (const server of this._getShuffledServers()) {\n      const controller = new AbortController()\n      this._abortControllers.push(controller)\n\n      try {\n        const response = await this._request(utils.buildResource(\n          server,\n          hostname,\n          recordType\n        ), controller.signal)\n\n        const data = response.Answer.map(a => [a.data.replace(/['\"]+/g, '')])\n        const ttl = Math.min(...response.Answer.map(a => a.TTL))\n\n        this._TXTcache.set(utils.getCacheKey(hostname, recordType), data, { maxAge: ttl })\n\n        return data\n      } catch (err) {\n        if (controller.signal.aborted) {\n          aborted = true\n        }\n\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      } finally {\n        this._abortControllers = this._abortControllers.filter(c => c !== controller)\n      }\n    }\n\n    if (aborted) {\n      throw Object.assign(new Error('queryTxt ECANCELLED'), {\n        code: 'ECANCELLED'\n      })\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n\n  clearCache (): void {\n    this._cache.clear()\n    this._TXTcache.clear()\n  }\n}\n\nexport default Resolver\n", "export default class QuickLRU extends Map {\n\t#size = 0;\n\t#cache = new Map();\n\t#oldCache = new Map();\n\t#maxSize;\n\t#maxAge;\n\t#onEviction;\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\tthis.#maxSize = options.maxSize;\n\t\tthis.#maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.#onEviction = options.onEviction;\n\t}\n\n\t// For tests.\n\tget __oldCache() {\n\t\treturn this.#oldCache;\n\t}\n\n\t#emitEvictions(cache) {\n\t\tif (typeof this.#onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.#onEviction(key, item.value);\n\t\t}\n\t}\n\n\t#deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.#onEviction === 'function') {\n\t\t\t\tthis.#onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this.#deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t#getItemValue(key, item) {\n\t\treturn item.expiry ? this.#getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t#peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this.#getItemValue(key, item);\n\t}\n\n\t#set(key, value) {\n\t\tthis.#cache.set(key, value);\n\t\tthis.#size++;\n\n\t\tif (this.#size >= this.#maxSize) {\n\t\t\tthis.#size = 0;\n\t\t\tthis.#emitEvictions(this.#oldCache);\n\t\t\tthis.#oldCache = this.#cache;\n\t\t\tthis.#cache = new Map();\n\t\t}\n\t}\n\n\t#moveToRecent(key, item) {\n\t\tthis.#oldCache.delete(key);\n\t\tthis.#set(key, item);\n\t}\n\n\t* #entriesAscending() {\n\t\tfor (const item of this.#oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.#cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\tconst item = this.#cache.get(key);\n\t\t\treturn this.#getItemValue(key, item);\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\tconst item = this.#oldCache.get(key);\n\t\t\tif (this.#deleteIfExpired(key, item) === false) {\n\t\t\t\tthis.#moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.#maxAge} = {}) {\n\t\tconst expiry = typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n\t\t\t? (Date.now() + maxAge)\n\t\t\t: undefined;\n\n\t\tif (this.#cache.has(key)) {\n\t\t\tthis.#cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.#set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\treturn !this.#deleteIfExpired(key, this.#cache.get(key));\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\treturn !this.#deleteIfExpired(key, this.#oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\treturn this.#peek(key, this.#cache);\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\treturn this.#peek(key, this.#oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.#cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis.#size--;\n\t\t}\n\n\t\treturn this.#oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.#cache.clear();\n\t\tthis.#oldCache.clear();\n\t\tthis.#size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this.#entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.#cache = new Map(items);\n\t\t\tthis.#oldCache = new Map();\n\t\t\tthis.#size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis.#emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.#oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.#cache = new Map();\n\t\t\tthis.#size = 0;\n\t\t}\n\n\t\tthis.#maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.#cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.#oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.#cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.#oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this.#entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this.#size) {\n\t\t\treturn this.#oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.#oldCache.keys()) {\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this.#size + oldCacheSize, this.#maxSize);\n\t}\n\n\tget maxSize() {\n\t\treturn this.#maxSize;\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'QuickLRU';\n\t}\n\n\ttoString() {\n\t\treturn `QuickLRU(${this.size}/${this.maxSize})`;\n\t}\n\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn this.toString();\n\t}\n}\n", "// Helpers.\nconst s = 1000;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nconst w = d * 7;\nconst y = d * 365.25;\nfunction ms(value, options) {\n    try {\n        if (typeof value === 'string' && value.length > 0) {\n            return parse(value);\n        }\n        else if (typeof value === 'number' && isFinite(value)) {\n            return options?.long ? fmtLong(value) : fmtShort(value);\n        }\n        throw new Error('Value is not a string or number.');\n    }\n    catch (error) {\n        const message = isError(error)\n            ? `${error.message}. value=${JSON.stringify(value)}`\n            : 'An unknown error has occured.';\n        throw new Error(message);\n    }\n}\n/**\n * Parse the given `str` and return milliseconds.\n */\nfunction parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n        throw new Error('Value exceeds the maximum length of 100 characters.');\n    }\n    const match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return NaN;\n    }\n    const n = parseFloat(match[1]);\n    const type = (match[2] || 'ms').toLowerCase();\n    switch (type) {\n        case 'years':\n        case 'year':\n        case 'yrs':\n        case 'yr':\n        case 'y':\n            return n * y;\n        case 'weeks':\n        case 'week':\n        case 'w':\n            return n * w;\n        case 'days':\n        case 'day':\n        case 'd':\n            return n * d;\n        case 'hours':\n        case 'hour':\n        case 'hrs':\n        case 'hr':\n        case 'h':\n            return n * h;\n        case 'minutes':\n        case 'minute':\n        case 'mins':\n        case 'min':\n        case 'm':\n            return n * m;\n        case 'seconds':\n        case 'second':\n        case 'secs':\n        case 'sec':\n        case 's':\n            return n * s;\n        case 'milliseconds':\n        case 'millisecond':\n        case 'msecs':\n        case 'msec':\n        case 'ms':\n            return n;\n        default:\n            // This should never occur.\n            throw new Error(`The unit ${type} was matched, but no matching case exists.`);\n    }\n}\nexport default ms;\n/**\n * Short format for `ms`.\n */\nfunction fmtShort(ms) {\n    const msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return `${Math.round(ms / d)}d`;\n    }\n    if (msAbs >= h) {\n        return `${Math.round(ms / h)}h`;\n    }\n    if (msAbs >= m) {\n        return `${Math.round(ms / m)}m`;\n    }\n    if (msAbs >= s) {\n        return `${Math.round(ms / s)}s`;\n    }\n    return `${ms}ms`;\n}\n/**\n * Long format for `ms`.\n */\nfunction fmtLong(ms) {\n    const msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return plural(ms, msAbs, d, 'day');\n    }\n    if (msAbs >= h) {\n        return plural(ms, msAbs, h, 'hour');\n    }\n    if (msAbs >= m) {\n        return plural(ms, msAbs, m, 'minute');\n    }\n    if (msAbs >= s) {\n        return plural(ms, msAbs, s, 'second');\n    }\n    return `${ms} ms`;\n}\n/**\n * Pluralization helper.\n */\nfunction plural(ms, msAbs, n, name) {\n    const isPlural = msAbs >= n * 1.5;\n    return `${Math.round(ms / n)} ${name}${isPlural ? 's' : ''}`;\n}\n/**\n * A type guard for errors.\n */\nfunction isError(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\n", "/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nimport humanize from 'ms'\nimport type { Debug, Debugger } from './index.js'\n\nexport default function setup (env: any): Debug {\n  createDebug.debug = createDebug\n  createDebug.default = createDebug\n  createDebug.coerce = coerce\n  createDebug.disable = disable\n  createDebug.enable = enable\n  createDebug.enabled = enabled\n  createDebug.humanize = humanize\n  createDebug.destroy = destroy\n\n  Object.keys(env).forEach(key => {\n    // @ts-expect-error cannot use string to index type\n    createDebug[key] = env[key]\n  })\n\n  /**\n   * The currently active debug mode names, and names to skip.\n   */\n\n  createDebug.names = [] as any[]\n  createDebug.skips = [] as any[]\n\n  /**\n   * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n   *\n   * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n   */\n  createDebug.formatters = {} satisfies Record<string, any>\n\n  /**\n   * Selects a color for a debug namespace\n   *\n   * @param {string} namespace - The namespace string for the debug instance to be colored\n   * @returns {number | string} An ANSI color code for the given namespace\n   */\n  function selectColor (namespace: string): number | string {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    // @ts-expect-error colors is not in the types\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length]\n  }\n  createDebug.selectColor = selectColor\n\n  /**\n   * Create a debugger with the given `namespace`.\n   *\n   * @param {string} namespace\n   * @returns {Function}\n   */\n  function createDebug (namespace: string): Debugger {\n    let prevTime: any\n    let enableOverride: any = null\n    let namespacesCache: any\n    let enabledCache: any\n\n    function debug (...args: any[]): void {\n      // Disabled?\n      // @ts-expect-error enabled is not in the types\n      if (!debug.enabled) {\n        return\n      }\n\n      const self: any = debug\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const ms = curr - (prevTime || curr)\n      self.diff = ms\n      self.prev = prevTime\n      self.curr = curr\n      prevTime = curr\n\n      args[0] = createDebug.coerce(args[0])\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, (match: any, format: any): any => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return '%'\n        }\n        index++\n        // @ts-expect-error formatters is not in the types\n        const formatter = createDebug.formatters[format]\n        if (typeof formatter === 'function') {\n          const val = args[index]\n          match = formatter.call(self, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      // @ts-expect-error formatArgs is not in the types\n      createDebug.formatArgs.call(self, args)\n\n      // @ts-expect-error log is not in the types\n      const logFn = self.log || createDebug.log\n      logFn.apply(self, args)\n    }\n\n    debug.namespace = namespace\n    // @ts-expect-error useColors is not in the types\n    debug.useColors = createDebug.useColors()\n    debug.color = createDebug.selectColor(namespace)\n    debug.extend = extend\n    debug.destroy = createDebug.destroy // XXX Temporary. Will be removed in the next major release.\n\n    Object.defineProperty(debug, 'enabled', {\n      enumerable: true,\n      configurable: false,\n      get: () => {\n        if (enableOverride !== null) {\n          return enableOverride\n        }\n        // @ts-expect-error namespaces is not in the types\n        if (namespacesCache !== createDebug.namespaces) {\n          // @ts-expect-error namespaces is not in the types\n          namespacesCache = createDebug.namespaces\n          enabledCache = createDebug.enabled(namespace)\n        }\n\n        return enabledCache\n      },\n      set: v => {\n        enableOverride = v\n      }\n    })\n\n    // Env-specific initialization logic for debug instances\n    // @ts-expect-error init is not in the types\n    if (typeof createDebug.init === 'function') {\n      // @ts-expect-error init is not in the types\n      createDebug.init(debug)\n    }\n\n    // @ts-expect-error some properties are added dynamically\n    return debug\n  }\n\n  function extend (this: any, namespace: string, delimiter: string): any {\n    const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace)\n    newDebug.log = this.log\n    return newDebug\n  }\n\n  /**\n   * Enables a debug mode by namespaces. This can include modes\n   * separated by a colon and wildcards.\n   *\n   * @param {string} namespaces\n   */\n  function enable (namespaces: string): void {\n    // @ts-expect-error save is not in the types\n    createDebug.save(namespaces)\n    // @ts-expect-error namespaces is not in the types\n    createDebug.namespaces = namespaces\n\n    createDebug.names = []\n    createDebug.skips = []\n\n    let i\n    const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n  }\n\n  /**\n   * Disable debug output.\n   *\n   * @returns {string} namespaces\n   */\n  function disable (): string {\n    const namespaces = [\n      ...createDebug.names.map(toNamespace),\n      ...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n    ].join(',')\n    createDebug.enable('')\n    return namespaces\n  }\n\n  /**\n   * Returns true if the given mode name is enabled, false otherwise.\n   *\n   * @param {string} name\n   * @returns {boolean}\n   */\n  function enabled (name: string): boolean {\n    if (name[name.length - 1] === '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Convert regexp to namespace\n   */\n  function toNamespace (regexp: RegExp): string {\n    return regexp.toString()\n      .substring(2, regexp.toString().length - 2)\n      .replace(/\\.\\*\\?$/, '*')\n  }\n\n  /**\n   * Coerce `val`.\n   */\n  function coerce (val: any): any {\n    if (val instanceof Error) {\n      return val.stack ?? val.message\n    }\n    return val\n  }\n\n  /**\n   * XXX DO NOT USE. This is a temporary stub function.\n   * XXX It WILL be removed in the next major release.\n   */\n  function destroy (): void {\n    console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.')\n  }\n\n  // @ts-expect-error setupFormatters is not in the types\n  createDebug.setupFormatters(createDebug.formatters)\n\n  // @ts-expect-error load is not in the types\n  createDebug.enable(createDebug.load())\n\n  // @ts-expect-error some properties are added dynamically\n  return createDebug\n}\n", "/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nimport humanize from 'ms'\nimport setup from './common.js'\n\nconst storage = localstorage()\n\n/**\n * Colors.\n */\nconst colors = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33'\n]\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors (): boolean {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  // @ts-expect-error window.process.type and window.process.__nwjs are not in the types\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/(edge|trident)\\/(\\d+)/) != null)) {\n    return false\n  }\n\n  // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  // @ts-expect-error document.documentElement.style.WebkitAppearance is not in the types\n  return (typeof document !== 'undefined' && document.documentElement?.style?.WebkitAppearance) ||\n    // Is firebug? http://stackoverflow.com/a/398120/376773\n    // @ts-expect-error window.console.firebug and window.console.exception are not in the types\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // Is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/firefox\\/(\\d+)/) != null) && parseInt(RegExp.$1, 10) >= 31) ||\n    // Double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent?.toLowerCase().match(/applewebkit\\/(\\d+)/))\n}\n\n/**\n * Colorize log arguments if enabled.\n */\nfunction formatArgs (this: any, args: any[]): void {\n  args[0] = (this.useColors ? '%c' : '') +\n    this.namespace +\n    (this.useColors ? ' %c' : ' ') +\n    args[0] +\n    (this.useColors ? '%c ' : ' ') +\n    '+' + humanize(this.diff)\n\n  if (!this.useColors) {\n    return\n  }\n\n  const c = 'color: ' + this.color\n  args.splice(1, 0, c, 'color: inherit')\n\n  // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  let index = 0\n  let lastC = 0\n  args[0].replace(/%[a-zA-Z%]/g, (match: string) => {\n    if (match === '%%') {\n      return\n    }\n    index++\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index\n    }\n  })\n\n  args.splice(lastC, 0, c)\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n */\nconst log = console.debug ?? console.log ?? (() => { })\n\n/**\n * Save `namespaces`.\n *\n * @param {string} namespaces\n */\nfunction save (namespaces: string): void {\n  try {\n    if (namespaces) {\n      storage?.setItem('debug', namespaces)\n    } else {\n      storage?.removeItem('debug')\n    }\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @returns {string} returns the previously persisted debug modes\n */\nfunction load (): string | null | undefined {\n  let r\n  try {\n    r = storage?.getItem('debug')\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof globalThis.process !== 'undefined' && 'env' in globalThis.process) {\n    r = globalThis.process.env.DEBUG\n  }\n\n  return r\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n */\nfunction localstorage (): Storage | undefined {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nfunction setupFormatters (formatters: any): void {\n  /**\n   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n   */\n  formatters.j = function (v: any) {\n    try {\n      return JSON.stringify(v)\n    } catch (error: any) {\n      return '[UnexpectedJSONParseError]: ' + error.message\n    }\n  }\n}\n\nexport default setup({ formatArgs, save, load, useColors, setupFormatters, colors, storage, log })\n", "/**\n * @packageDocumentation\n *\n * This module is a fork of the [debug](https://www.npmjs.com/package/debug) module. It has been converted to TypeScript and the output is ESM.\n *\n * It is API compatible with no extra features or bug fixes, it should only be used if you want a 100% ESM application.\n *\n * ESM should be arriving in `debug@5.x.x` so this module can be retired after that.\n *\n * Please see [debug](https://www.npmjs.com/package/debug) for API details.\n */\n\n/**\n * Module dependencies.\n */\nimport weald from './node.js'\nimport type ms from 'ms'\n\nexport interface Debug {\n  (namespace: string): Debugger\n  coerce(val: any): any\n  disable(...args: string[]): string\n  enable(namespaces: string | boolean): void\n  enabled(namespaces: string): boolean\n  formatArgs(this: Debugger, args: any[]): void\n  log(...args: any[]): any\n  selectColor(namespace: string): string | number\n  humanize: typeof ms\n\n  names: RegExp[]\n  skips: RegExp[]\n\n  formatters: Formatters\n\n  inspectOpts?: {\n    hideDate?: boolean | number | null\n    colors?: boolean | number | null\n    depth?: boolean | number | null\n    showHidden?: boolean | number | null\n  }\n}\n\nexport type Formatters = Record<string, (v: any) => string>\n\nexport interface Debugger {\n  (formatter: any, ...args: any[]): void\n\n  color: string\n  diff: number\n  enabled: boolean\n  log(...args: any[]): any\n  namespace: string\n  destroy(): boolean\n  extend(namespace: string, delimiter?: string): Debugger\n}\n\nexport default weald\n", "/**\n * Build fetch resource for request\n */\nexport function buildResource (serverResolver: string, hostname: string, recordType: string): string {\n  return `${serverResolver}?name=${hostname}&type=${recordType}`\n}\n\nexport interface DNSJSON {\n  Question: Question[]\n  Answer: Answer[]\n}\n\ninterface Question {\n  name: string\n  type: number\n}\n\ninterface Answer {\n  name: string\n  type: number\n  data: string\n  TTL: number\n}\n\n/**\n * Use fetch to find the record\n */\nexport async function request (resource: string, signal: AbortSignal): Promise<DNSJSON> {\n  const req = await fetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    }),\n    signal\n  })\n  const res = await req.json()\n\n  return res as DNSJSON\n}\n\n/**\n * Creates cache key composed by recordType and hostname\n *\n * @param {string} hostname\n * @param {string} recordType\n */\nexport function getCacheKey (hostname: string, recordType: string): string {\n  return `${recordType}_${hostname}`\n}\n"],
  "mappings": "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",
  "names": ["index_exports", "__export", "index_default", "QuickLRU", "#size", "#cache", "#oldCache", "#maxSize", "#maxAge", "#onEviction", "options", "#emitEvictions", "cache", "key", "item", "#deleteIfExpired", "#getOrDeleteIfExpired", "#getItemValue", "#peek", "#set", "value", "#moveToRecent", "#entriesAscending", "maxAge", "expiry", "deleted", "newSize", "items", "removeCount", "i", "oldCacheSize", "callbackFunction", "thisArgument", "ms", "value", "options", "parse", "fmtLong", "fmtShort", "error", "message", "isError", "str", "match", "n", "type", "dist_default", "msAbs", "plural", "name", "isPlural", "setup", "env", "createDebug", "coerce", "disable", "enable", "enabled", "dist_default", "destroy", "key", "selectColor", "namespace", "hash", "i", "prevTime", "enableOverride", "namespacesCache", "enabledCache", "debug", "args", "self", "curr", "ms", "index", "match", "format", "formatter", "val", "extend", "v", "delimiter", "newDebug", "namespaces", "split", "len", "toNamespace", "name", "regexp", "storage", "localstorage", "colors", "useColors", "formatArgs", "args", "dist_default", "c", "index", "lastC", "match", "log", "save", "namespaces", "load", "setupFormatters", "formatters", "v", "error", "browser_default", "setup", "src_default", "browser_default", "buildResource", "serverResolver", "hostname", "recordType", "request", "resource", "signal", "getCacheKey", "log", "src_default", "Resolver", "options", "QuickLRU", "request", "controller", "newServers", "i", "j", "temp", "servers", "hostname", "rrType", "recordType", "cached", "getCacheKey", "aborted", "server", "response", "buildResource", "data", "a", "ttl", "index_default"]
}
